  0%|          | 0/100 [00:00<?, ?it/s]  0%|          | 0/100 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/fs01/home/opent03/detectron/run_div.py", line 78, in <module>
    main()
  File "/fs01/home/opent03/detectron/run_div.py", line 60, in main
    flag, _, _ = permutation_test(distance, 
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 81, in permutation_test
    est = distance.get_distance(X, Y)
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 65, in get_distance
    return self.get_h_distance(X, Y)
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 28, in get_h_distance
    logprob_1 = self._get_kde_estimates(self.bandwidth, X)
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 20, in _get_kde_estimates
    kernel = stats.gaussian_kde(data, bandwidth)
  File "/h/opent03/.conda/envs/dis/lib/python3.9/site-packages/scipy/stats/_kde.py", line 220, in __init__
    raise ValueError(msg)
ValueError: Number of dimensions is greater than number of samples. This results in a singular data covariance matrix, which cannot be treated using the algorithms implemented in `gaussian_kde`. Note that `gaussian_kde` interprets each *column* of `dataset` to be a point; consider transposing the input to `dataset`.
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:02<03:18,  2.00s/it]  2%|▏         | 2/100 [00:03<03:10,  1.95s/it]  3%|▎         | 3/100 [00:05<03:08,  1.94s/it]  4%|▍         | 4/100 [00:07<03:06,  1.94s/it]  5%|▌         | 5/100 [00:09<03:03,  1.93s/it]  6%|▌         | 6/100 [00:11<03:00,  1.92s/it]  7%|▋         | 7/100 [00:13<02:57,  1.91s/it]  8%|▊         | 8/100 [00:15<02:55,  1.91s/it]  9%|▉         | 9/100 [00:17<02:53,  1.90s/it] 10%|█         | 10/100 [00:19<02:51,  1.90s/it] 11%|█         | 11/100 [00:21<02:49,  1.91s/it] 12%|█▏        | 12/100 [00:23<02:47,  1.91s/it] 13%|█▎        | 13/100 [00:24<02:45,  1.91s/it] 14%|█▍        | 14/100 [00:26<02:43,  1.90s/it] 15%|█▌        | 15/100 [00:28<02:41,  1.90s/it] 16%|█▌        | 16/100 [00:30<02:40,  1.91s/it] 17%|█▋        | 17/100 [00:32<02:37,  1.90s/it] 18%|█▊        | 18/100 [00:34<02:36,  1.91s/it] 19%|█▉        | 19/100 [00:36<02:34,  1.91s/it] 20%|██        | 20/100 [00:38<02:31,  1.90s/it] 21%|██        | 21/100 [00:40<02:29,  1.90s/it] 22%|██▏       | 22/100 [00:41<02:27,  1.89s/it] 23%|██▎       | 23/100 [00:43<02:25,  1.89s/it] 24%|██▍       | 24/100 [00:45<02:23,  1.88s/it] 25%|██▌       | 25/100 [00:47<02:20,  1.87s/it] 26%|██▌       | 26/100 [00:49<02:19,  1.88s/it] 27%|██▋       | 27/100 [00:51<02:17,  1.88s/it] 28%|██▊       | 28/100 [00:53<02:16,  1.89s/it] 29%|██▉       | 29/100 [00:55<02:14,  1.89s/it] 30%|███       | 30/100 [00:57<02:12,  1.89s/it] 31%|███       | 31/100 [00:59<02:12,  1.91s/it] 32%|███▏      | 32/100 [01:00<02:09,  1.91s/it] 33%|███▎      | 33/100 [01:02<02:08,  1.91s/it] 34%|███▍      | 34/100 [01:04<02:05,  1.91s/it] 35%|███▌      | 35/100 [01:06<02:03,  1.90s/it] 36%|███▌      | 36/100 [01:08<02:01,  1.89s/it] 37%|███▋      | 37/100 [01:10<01:59,  1.90s/it] 38%|███▊      | 38/100 [01:12<01:57,  1.90s/it] 39%|███▉      | 39/100 [01:14<01:55,  1.89s/it] 40%|████      | 40/100 [01:16<01:53,  1.89s/it] 41%|████      | 41/100 [01:18<01:52,  1.91s/it] 42%|████▏     | 42/100 [01:19<01:50,  1.91s/it] 43%|████▎     | 43/100 [01:21<01:48,  1.90s/it] 44%|████▍     | 44/100 [01:23<01:46,  1.91s/it]