  0%|          | 0/100 [00:00<?, ?it/s]  0%|          | 0/100 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/fs01/home/opent03/detectron/run_div.py", line 78, in <module>
    main()
  File "/fs01/home/opent03/detectron/run_div.py", line 60, in main
    flag, _, _ = permutation_test(distance, 
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 81, in permutation_test
    est = distance.get_distance(X, Y)
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 65, in get_distance
    return self.get_h_distance(X, Y)
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 28, in get_h_distance
    logprob_1 = self._get_kde_estimates(self.bandwidth, X)
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 20, in _get_kde_estimates
    kernel = stats.gaussian_kde(data, bandwidth)
  File "/h/opent03/.conda/envs/dis/lib/python3.9/site-packages/scipy/stats/_kde.py", line 220, in __init__
    raise ValueError(msg)
ValueError: Number of dimensions is greater than number of samples. This results in a singular data covariance matrix, which cannot be treated using the algorithms implemented in `gaussian_kde`. Note that `gaussian_kde` interprets each *column* of `dataset` to be a point; consider transposing the input to `dataset`.
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:04<07:03,  4.28s/it]  2%|▏         | 2/100 [00:08<06:52,  4.21s/it]  3%|▎         | 3/100 [00:12<06:49,  4.22s/it]  4%|▍         | 4/100 [00:16<06:42,  4.19s/it]  5%|▌         | 5/100 [00:21<06:39,  4.21s/it]  6%|▌         | 6/100 [00:25<06:37,  4.23s/it]  7%|▋         | 7/100 [00:29<06:34,  4.24s/it]  8%|▊         | 8/100 [00:33<06:30,  4.25s/it]  9%|▉         | 9/100 [00:38<06:27,  4.26s/it] 10%|█         | 10/100 [00:42<06:23,  4.26s/it] 11%|█         | 11/100 [00:46<06:18,  4.26s/it] 12%|█▏        | 12/100 [00:50<06:13,  4.24s/it] 13%|█▎        | 13/100 [00:55<06:09,  4.24s/it] 14%|█▍        | 14/100 [00:59<06:04,  4.24s/it] 15%|█▌        | 15/100 [01:03<06:00,  4.25s/it] 16%|█▌        | 16/100 [01:07<05:58,  4.27s/it] 17%|█▋        | 17/100 [01:12<05:56,  4.30s/it] 18%|█▊        | 18/100 [01:16<05:48,  4.25s/it]