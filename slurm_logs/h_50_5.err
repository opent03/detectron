  0%|          | 0/100 [00:00<?, ?it/s]  0%|          | 0/100 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/fs01/home/opent03/detectron/run_div.py", line 78, in <module>
    main()
  File "/fs01/home/opent03/detectron/run_div.py", line 60, in main
    flag, _, _ = permutation_test(distance, 
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 81, in permutation_test
    est = distance.get_distance(X, Y)
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 65, in get_distance
    return self.get_h_distance(X, Y)
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 28, in get_h_distance
    logprob_1 = self._get_kde_estimates(self.bandwidth, X)
  File "/fs01/home/opent03/detectron/baselines/divergence.py", line 20, in _get_kde_estimates
    kernel = stats.gaussian_kde(data, bandwidth)
  File "/h/opent03/.conda/envs/dis/lib/python3.9/site-packages/scipy/stats/_kde.py", line 220, in __init__
    raise ValueError(msg)
ValueError: Number of dimensions is greater than number of samples. This results in a singular data covariance matrix, which cannot be treated using the algorithms implemented in `gaussian_kde`. Note that `gaussian_kde` interprets each *column* of `dataset` to be a point; consider transposing the input to `dataset`.
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:02<04:44,  2.87s/it]  2%|▏         | 2/100 [00:05<04:38,  2.84s/it]  3%|▎         | 3/100 [00:08<04:33,  2.82s/it]  4%|▍         | 4/100 [00:11<04:31,  2.82s/it]  5%|▌         | 5/100 [00:14<04:29,  2.83s/it]  6%|▌         | 6/100 [00:17<04:26,  2.84s/it]  7%|▋         | 7/100 [00:19<04:24,  2.84s/it]  8%|▊         | 8/100 [00:22<04:21,  2.84s/it]  9%|▉         | 9/100 [00:25<04:17,  2.83s/it] 10%|█         | 10/100 [00:28<04:14,  2.82s/it] 11%|█         | 11/100 [00:31<04:10,  2.82s/it] 12%|█▏        | 12/100 [00:33<04:07,  2.82s/it] 13%|█▎        | 13/100 [00:36<04:04,  2.81s/it] 14%|█▍        | 14/100 [00:39<04:01,  2.81s/it] 15%|█▌        | 15/100 [00:42<03:59,  2.82s/it] 16%|█▌        | 16/100 [00:45<03:56,  2.81s/it] 17%|█▋        | 17/100 [00:48<03:53,  2.82s/it] 18%|█▊        | 18/100 [00:50<03:50,  2.81s/it] 19%|█▉        | 19/100 [00:53<03:47,  2.81s/it] 20%|██        | 20/100 [00:56<03:44,  2.80s/it] 21%|██        | 21/100 [00:59<03:41,  2.80s/it] 22%|██▏       | 22/100 [01:02<03:38,  2.80s/it] 23%|██▎       | 23/100 [01:04<03:35,  2.80s/it] 24%|██▍       | 24/100 [01:07<03:32,  2.80s/it] 25%|██▌       | 25/100 [01:10<03:30,  2.80s/it] 26%|██▌       | 26/100 [01:13<03:27,  2.80s/it] 27%|██▋       | 27/100 [01:16<03:24,  2.80s/it] 28%|██▊       | 28/100 [01:18<03:21,  2.80s/it] 29%|██▉       | 29/100 [01:21<03:18,  2.80s/it] 30%|███       | 30/100 [01:24<03:16,  2.80s/it]